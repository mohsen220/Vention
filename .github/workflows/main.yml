name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      # - name: Install Percy CLI
      #   run: npm install --save-dev @percy/cli

      - name: Start application
        run: npm run dev &
        
      - name: Wait for application to be ready
        uses: jakejarvis/wait-action@v0.1.0
        with:
          timeout: 60
          url: 'http://localhost:8080'

      - name: Run Cypress Tests
        uses: cypress-io/github-action@v2
        with:
          config-file: cypress.config.js
          record: true
          key: ${{ secrets.CYPRESS_RECORD_KEY }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}

      - name: Upload Cypress Videos
        uses: actions/upload-artifact@v2
        with:
          name: cypress-videos
          path: cypress/videos/

      - name: Upload Cypress Screenshots
        uses: actions/upload-artifact@v2
        with:
          name: cypress-screenshots
          path: cypress/screenshots/

    
      - name: Restart and Deploy EC2 Server
        if: success()
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "STEP 1: Setting up SSH..."
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts
          
          echo "STEP 2: Cloning | Pulling repository..."
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@${EC2_HOST} << 'EOF'
            # Ensuring the project directory exists and navigating there
            mkdir -p /home/ec2-user/project/Vention
            cd /home/ec2-user/project/Vention

            # Handling repository initialization
            if [ -d .git ]; then
                git pull
            else
                git clone https://github.com/yourusername/yourrepo.git .
            fi

            echo "STEP 3: Installing Dependencies and Running Application..."
            echo "show the current directory"
            pwd
            npm install
            pm2 reload ecosystem.config.js --update-env || pm2 start ecosystem.config.js --env production
          EOF
