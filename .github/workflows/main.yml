name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14' # Adjust this to your project's Node.js version

      - name: Install Dependencies
        run: npm install

      - name: Run Cypress Tests
        uses: cypress-io/github-action@v2
        with:
          start: npm run dev
          wait-on: 'http://localhost:8080'
          wait-on-timeout: 60
          record: true
          parallel: true
          browser: chrome
          headless: true
          config-file: 'cypress.config.js'
          screenshot-dir: 'cypress/screenshots'
          video: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

    
      - name: Restart and Deploy EC2 Server
        if: success()
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        run: |
          echo "STEP 1: Setting up SSH..."
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts
          
          echo "STEP 2: Cloning | Pulling repository..."
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@${EC2_HOST} '
            # Ensuring the project directory exists and navigating there
            mkdir -p /home/ec2-user/project/Vention
            cd /home/ec2-user/project/Vention

            # Handling repository initialization
            if [ -d .git ]; then
                git pull
            else
                git clone https://github-token:${{ secrets.GIT_TOKEN }}@github.com/mohsen220/Vention.git .
            fi

            echo "STEP 3: Installing Dependencies and Running Application..."
            npm install --production
            pm2 reload ecosystem.config.js --update-env || pm2 start ecosystem.config.js --env production
          '
